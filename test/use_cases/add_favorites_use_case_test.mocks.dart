// Mocks generated by Mockito 5.4.2 from annotations
// in imgur/test/use_cases/add_favorites_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:imgur/infra/storage/shared_preferences_manager.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:shared_preferences/shared_preferences.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSharedPreferences_0 extends _i1.SmartFake
    implements _i2.SharedPreferences {
  _FakeSharedPreferences_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SharedPreferencesManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferencesManager extends _i1.Mock
    implements _i3.SharedPreferencesManager {
  MockSharedPreferencesManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SharedPreferences get prefs => (super.noSuchMethod(
        Invocation.getter(#prefs),
        returnValue: _FakeSharedPreferences_0(
          this,
          Invocation.getter(#prefs),
        ),
      ) as _i2.SharedPreferences);

  @override
  set prefs(_i2.SharedPreferences? _prefs) => super.noSuchMethod(
        Invocation.setter(
          #prefs,
          _prefs,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void changeFavorites({
    required String? id,
    required bool? isFavorite,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #changeFavorites,
          [],
          {
            #id: id,
            #isFavorite: isFavorite,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String?, dynamic> getFavorites() => (super.noSuchMethod(
        Invocation.method(
          #getFavorites,
          [],
        ),
        returnValue: <String?, dynamic>{},
      ) as Map<String?, dynamic>);
}
